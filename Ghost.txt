#include <Bounce.h>
#include "Keyboard.h"
int ledPins[] = {13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23};
int pinCount = 11;
int ROOM_STATE = 0;
int timer = 0;
int led = 0;
Bounce ROOM_1 = Bounce(2, 10);
Bounce ROOM_2 = Bounce(3, 10);
Bounce ROOM_3 = Bounce(4, 10);
Bounce ROOM_4 = Bounce(5, 10);
Bounce ROOM_5 = Bounce(6, 10);
unsigned long previousmicros = 0;

void setup() {
  Mouse.screenSize(1920, 1080);
  pinMode(2, INPUT_PULLUP);
  pinMode(3, INPUT_PULLUP);
  pinMode(4, INPUT_PULLUP);
  pinMode(5, INPUT_PULLUP);
  pinMode(6, INPUT_PULLUP);
  for (int thisPin = 0; thisPin < pinCount; thisPin++) {
    pinMode(ledPins[thisPin], OUTPUT);
  }
}

void loop() {
  unsigned long currentmicros = millis();
  ROOM_1.update();
  ROOM_2.update();
  ROOM_3.update();
  ROOM_4.update();
  ROOM_5.update();

  if (ROOM_STATE == 0) {//START
    for (int thisPin = 1; thisPin < pinCount; thisPin++) {
      digitalWrite(ledPins[thisPin], HIGH);
      delay(10);
      digitalWrite(ledPins[thisPin], LOW);
    }
    for (int thisPin = pinCount - 1; thisPin >= 1; thisPin--) {
      digitalWrite(ledPins[thisPin], HIGH);
      delay(10);
      digitalWrite(ledPins[thisPin], LOW);
    }
  }
  if (ROOM_STATE == 1) {//READY
    digitalWrite(ledPins[0], HIGH);
  }
  if (ROOM_STATE == 5) {//ROOM_GREEN 5/6 ห้อง
    if (currentmicros - previousmicros == 300000 - timer) { //set millisec default = 5 min
      previousmicros = currentmicros;

      Mouse.moveTo(250, 210);//1
      Mouse.click();
      Mouse.click();
      Mouse.moveTo(730, 210);//2
      Mouse.click();
      Mouse.click();
      Mouse.moveTo(1210, 210);//3
      Mouse.click();
      Mouse.click();
      Mouse.moveTo(1690, 210);//4
      Mouse.click();
      Mouse.click();
      Mouse.moveTo(250, 730);//5
      Mouse.click();
      Mouse.click();
      Mouse.moveTo(730, 730);//6
      Mouse.click();
      Mouse.click();
      Mouse.moveTo(1210, 730);//7
      Mouse.click();
      Mouse.click();
      Mouse.moveTo(1570, 810);////STOP WATCH
      Mouse.click();


      timer = 0;
      led = 0;
      for (int thisPin = pinCount - 1; thisPin >= 0; thisPin--) {
        digitalWrite(ledPins[thisPin], LOW);
      }
    }
  }

  //---------------------------------------------------------------------------------//

  if (ROOM_1.fallingEdge()) {
    ROOM_STATE = 1;
  }
  if (ROOM_2.fallingEdge()) { //GREEN 5/6
    previousmicros = currentmicros;

    Mouse.moveTo(1790, 810);//START WATCH
    Mouse.click();

    Mouse.moveTo(730, 210);//2
    Mouse.click();
    Mouse.click();
    Mouse.moveTo(1210, 210);//3
    Mouse.click();
    Mouse.click();
    Mouse.moveTo(1690, 210);//4
    Mouse.click();
    Mouse.click();
    Mouse.moveTo(250, 730);//5
    Mouse.click();
    Mouse.click();
    Mouse.moveTo(730, 730);//6
    Mouse.click();
    Mouse.click();
    Mouse.moveTo(1210, 730);//7
    Mouse.click();
    Mouse.click();
    Mouse.moveTo(1790, 810);//START WATCH
    Mouse.click();

    ROOM_STATE = 5;
    timer = 0;
    led = 0;
    for (int thisPin = pinCount - 1; thisPin >= 0; thisPin--) {
      digitalWrite(ledPins[thisPin], LOW);
    }
  }
  if (ROOM_3.fallingEdge()) {
    ROOM_STATE = 0;
    digitalWrite(ledPins[0], LOW);
  }
  if (ROOM_4.fallingEdge()) {
    timer = timer + 5;
    led = led + 1;
    for (int thisPin = pinCount - 1; thisPin >= 0; thisPin--) {
      digitalWrite(ledPins[thisPin], LOW);
    }
    if (led >= 0) {
      digitalWrite(ledPins[led], HIGH);
    }
    if (led <= -1) {
      digitalWrite(ledPins[0], HIGH);
    }
    if (led == -1) {
      digitalWrite(ledPins[10], HIGH);
    }
    if (led == -2) {
      digitalWrite(ledPins[9], HIGH);
    }
    if (led == -3) {
      digitalWrite(ledPins[8], HIGH);
    }
    if (led == -4) {
      digitalWrite(ledPins[7], HIGH);
    }
    if (led == -5) {
      digitalWrite(ledPins[6], HIGH);
    }
    if (led == -6) {
      digitalWrite(ledPins[5], HIGH);
    }
    if (led == -7) {
      digitalWrite(ledPins[4], HIGH);
    }
    if (led == -8) {
      digitalWrite(ledPins[3], HIGH);
    }
    if (led == -9) {
      digitalWrite(ledPins[2], HIGH);
    }
    if (led == -10) {
      digitalWrite(ledPins[1], HIGH);
    }
    Serial.println(timer);
  }
  if (ROOM_5.fallingEdge()) {
    timer = timer - 5;
    led = led - 1;
    for (int thisPin = pinCount - 1; thisPin >= 0; thisPin--) {
      digitalWrite(ledPins[thisPin], LOW);
    }
    if (led >= 0) {
      digitalWrite(ledPins[led], HIGH);
    }
    if (led <= -1) {
      digitalWrite(ledPins[0], HIGH);
    }
    if (led == -1) {
      digitalWrite(ledPins[10], HIGH);
    }
    if (led == -2) {
      digitalWrite(ledPins[9], HIGH);
    }
    if (led == -3) {
      digitalWrite(ledPins[8], HIGH);
    }
    if (led == -4) {
      digitalWrite(ledPins[7], HIGH);
    }
    if (led == -5) {
      digitalWrite(ledPins[6], HIGH);
    }
    if (led == -6) {
      digitalWrite(ledPins[5], HIGH);
    }
    if (led == -7) {
      digitalWrite(ledPins[4], HIGH);
    }
    if (led == -8) {
      digitalWrite(ledPins[3], HIGH);
    }
    if (led == -9) {
      digitalWrite(ledPins[2], HIGH);
    }
    if (led == -10) {
      digitalWrite(ledPins[1], HIGH);
    }
    Serial.println(timer);
  }
}